name: Release

on:
  push:
    tags:
    - 'v*'

jobs:
  createrelease:
    name: createrelease
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Save Release URL
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt

      - name: Upload Release URL Artifact
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build_win:
    needs: [createrelease]
    name: build_win
    runs-on : windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: microsoft/setup-msbuild@v1.0.0

      - name: CMake
        run: cmake -G "Visual Studio 16 2019" -A x64 -S . -B build

      - name: Build
        run: cmake --build build --config Release --target ppr-preprocess ppr-backend footrouting ppr-benchmark

      - name: Load Release URL
        uses: actions/download-artifact@v1
        with:
          name: release_url

      - name: Set Upload URL
        id: get_release_info
        run: python .github\workflows\set_update_url.py

      - name: Upload ppr-backend.exe
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }} 
          asset_path: build\Release\ppr-backend.exe
          asset_name: ppr-backend.exe
          asset_content_type: application/octet-stream

      - name: Upload ppr-preprocess.exe
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }} 
          asset_path: build\Release\ppr-preprocess.exe
          asset_name: ppr-preprocess.exe
          asset_content_type: application/octet-stream

  build_linux:
    needs: [createrelease]
    name: build_linux
    runs-on : ubuntu-latest
    container:
      image: motisproject/cpp-build:latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: CMake
        run: cmake-ccache-gcc-9 -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --target ppr-preprocess ppr-backend footrouting ppr-benchmark

      - name: Load Release URL
        uses: actions/download-artifact@v1
        with:
          name: release_url

      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value

      - name: Upload ppr-preprocess
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }} 
          asset_path: build/ppr-preprocess
          asset_name: ppr-preprocess
          asset_content_type: application/octet-stream

      - name: Upload ppr-backend
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }} 
          asset_path: build/ppr-backend
          asset_name: ppr-backend
          asset_content_type: application/octet-stream
